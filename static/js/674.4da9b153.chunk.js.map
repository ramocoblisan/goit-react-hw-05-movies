{"version":3,"file":"static/js/674.4da9b153.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PostersMovies/PostersMovies.module.css?faaf","components/PostersMovies/PostersMovies.jsx","webpack://react-homework-template/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","helpers/api.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"PostersMovies_gallery__c43A8\",\"itemsImg\":\"PostersMovies_itemsImg__4ianM\",\"itemImg\":\"PostersMovies_itemImg__+Y7t3\",\"posterTitle\":\"PostersMovies_posterTitle__upuiu\",\"linkPoster\":\"PostersMovies_linkPoster__pgKZr\",\"posterVote\":\"PostersMovies_posterVote__mKOvX\"};","import React from \"react\";\nimport PropTypes from 'prop-types'; \nimport { IMAGE_URL } from \"helpers/api\";\nimport styles from \"./PostersMovies.module.css\"\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst PostersMovies = ({ movies, context }) => {\n    const navigate = useNavigate();\n\n    const handleMovieClick = (movieId) => {\n        if (context === \"movies\") {\n            navigate(`/movies/${movieId}`);\n        } else {\n            navigate(`/movies/movies/${movieId}`);\n        }\n    };\n\n    const getReleaseYear = (releaseDate) => {\n        if (releaseDate) {\n            const year = releaseDate.slice(0, 4);\n            return year;\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <ul className={styles.gallery}>\n                {movies.map(movie => (\n                    <li key={movie.id} className={styles.itemsImg}>\n                       <Link to={`/movies/${movie.id}`} \n                       className={styles.linkPoster} \n                       onClick={() => handleMovieClick(movie.id)}\n                       >\n                        {\n                            movie.poster_path ? \n                            <img\n                            className={styles.itemImg} \n                            src={IMAGE_URL + movie.poster_path} \n                            alt={movie.title}\n                           />\n                           :\n                           <div>No Poster Available</div>\n                        }\n                        <p className={styles.posterVote}>{movie.vote_average.toFixed(1)}</p>\n                        <p className={styles.posterTitle}>{movie.title} |{getReleaseYear(movie.release_date)}</p>\n                        </Link> \n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}\n\nPostersMovies.propTypes =  {\n    movies: PropTypes.array.isRequired,\n}\nexport default PostersMovies;","// extracted by mini-css-extract-plugin\nexport default {\"spinnerContainer\":\"Spinner_spinnerContainer__vzmN8\"};","import React from \"react\";\nimport styles from \"./Spinner.module.css\";\nimport { Circles } from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <>\n      <div className={styles.spinnerContainer}>\n        <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#ffa505\"\n        ariaLabel=\"circles-loading\"\n        visible={true}\n        />\n      </div>\n    </>\n  )\n}\nexport default Spinner;","import axios from 'axios';\n\nconst KEY = \"357832701cf86b43284c723babec1587\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${KEY}&language=en-US`);\n        if (response.status !== 200) {\n            throw new Error(\"Error fetching trending movies!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200) {\n            throw new Error(\"Error fetching details movies!\");\n        }\n        return response.data;\n    } catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesCredits = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n    }catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesReviews = async(movieId)=>{\n    try{\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error);\n    }\n}\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n        if (response.status !== 200){ \n            throw new Error(\"Error fetching movies search!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.log(error);\n        throw error; \n    }\n}\n\nexport const getTrailerMovie = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/videos?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200){\n            throw new Error (\"Error fetching movies video!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error)\n    }\n}","// extracted by mini-css-extract-plugin\nexport default {\"containerHome\":\"HomePage_containerHome__a9QJB\",\"containerBox\":\"HomePage_containerBox__Haqhs\",\"titleBox\":\"HomePage_titleBox__dbowA\"};","import React, { useEffect, useState } from 'react';\nimport styles from './HomePage.module.css'\nimport PostersMovies from \"components/PostersMovies/PostersMovies\";\nimport { getTrendingMovies} from 'helpers/api';\nimport Spinner from 'components/Spinner/Spinner';\n\n const HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true)\n    useEffect(() => {\n        getTrendingMovies()\n        .then(response => {\n            console.log(\"Movies response:\", response);\n            if (response && response.results) {\n                console.log(\"Movies:\", response.results);\n                setMovies(response.results);\n            } else {\n                console.error(\"No movies found in response\");\n            }\n            setIsLoading(false)\n        })\n        .catch(error => {\n            console.error(\"Error fetching trending movies:\", error);\n            setIsLoading(false);\n        });\n    }, []);\n\n    return (\n        <div className={styles.containerHome}>\n             <div className= {styles.containerBox}>\n            <div className={styles.titleBox}>\n            <h1 className={styles.title}>Trending today</h1>\n            </div>\n        </div>\n        {isLoading ? <Spinner/> :  <PostersMovies movies={movies} context=\"\" />}\n        </div>\n       \n    )\n};\n\nexport default HomePage;"],"names":["_ref","movies","context","navigate","useNavigate","_jsx","_Fragment","children","className","styles","map","movie","_jsxs","Link","to","concat","id","onClick","movieId","poster_path","src","IMAGE_URL","alt","title","vote_average","toFixed","releaseDate","release_date","slice","Circles","height","width","color","ariaLabel","visible","KEY","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","status","Error","abrupt","data","t0","console","error","stop","apply","arguments","getMoviesDetails","_ref2","_callee2","_context2","_x","getMoviesCredits","_ref3","_callee3","_context3","_x2","getMoviesReviews","_ref4","_callee4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_context5","log","_x4","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","then","results","catch","Spinner","PostersMovies"],"sourceRoot":""}