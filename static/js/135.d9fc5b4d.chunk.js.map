{"version":3,"file":"static/js/135.d9fc5b4d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","helpers/api.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinnerContainer\":\"Spinner_spinnerContainer__vzmN8\"};","import React from \"react\";\nimport styles from \"./Spinner.module.css\";\nimport { Circles } from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <>\n      <div className={styles.spinnerContainer}>\n        <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#ffa505\"\n        ariaLabel=\"circles-loading\"\n        visible={true}\n        />\n      </div>\n    </>\n  )\n}\nexport default Spinner;","import axios from 'axios';\n\nconst KEY = \"357832701cf86b43284c723babec1587\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${KEY}&language=en-US`);\n        if (response.status !== 200) {\n            throw new Error(\"Error fetching trending movies!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200) {\n            throw new Error(\"Error fetching details movies!\");\n        }\n        return response.data;\n    } catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesCredits = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n    }catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesReviews = async(movieId)=>{\n    try{\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error);\n    }\n}\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n        if (response.status !== 200){ \n            throw new Error(\"Error fetching movies search!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.log(error);\n        throw error; \n    }\n}\n\nexport const getTrailerMovie = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/videos?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200){\n            throw new Error (\"Error fetching movies video!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error)\n    }\n}","// extracted by mini-css-extract-plugin\nexport default {\"containerBtn\":\"MovieDetails_containerBtn__JFwvh\",\"btnBack\":\"MovieDetails_btnBack__X1hfE\",\"linkContent\":\"MovieDetails_linkContent__+QD+G\",\"icon\":\"MovieDetails_icon__p4rqP\",\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"containerMovies\":\"MovieDetails_containerMovies__vy6b6\",\"contaonerPosition\":\"MovieDetails_contaonerPosition__2iqRz\",\"posterVote\":\"MovieDetails_posterVote__567V+\",\"containerDetails\":\"MovieDetails_containerDetails__qkDYF\",\"description\":\"MovieDetails_description__33mrB\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"boxInfo\":\"MovieDetails_boxInfo__Plu-D\",\"info\":\"MovieDetails_info__qv2SI\",\"linksComponents\":\"MovieDetails_linksComponents__my8tC\",\"link\":\"MovieDetails_link__U+v+7\",\"itemPoster\":\"MovieDetails_itemPoster__BMjMs\"};","import React, { useEffect, useState } from \"react\";\nimport { Link, NavLink, Outlet, useParams} from \"react-router-dom\";\nimport { IMAGE_URL, getMoviesDetails } from \"helpers/api\";\nimport styles from './MovieDetails.module.css';\nimport { MdArrowBackIos } from \"react-icons/md\";\nimport Spinner from \"components/Spinner/Spinner\";\n\nconst MoviesDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setIsLoading(true); \n        getMoviesDetails(movieId)\n            .then(response => {\n                console.log('Response movie details:', response)\n                setMovie(response);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [movieId]);\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n    \n    if (!movie) {\n        return <Spinner/>\n    }\n\n    return (\n        <>\n            <div className={styles.wrapper}>\n                <div className={styles.containerBtn}>\n                    <Link to='/goit-react-hw-05-movies' className={styles.btnBack}>\n                        <div className={styles.linkContent}>\n                            <MdArrowBackIos className={styles.icon} />\n                            <span>Go back</span>\n                        </div>\n                    </Link>\n                </div>\n                <div className={styles.containerMovies}>\n                    <div className={styles.contaonerPosition}>\n                        {!movie.poster_path || movie.poster_path === '' ? (\n                            <div>No Poster Available</div>\n                        ) : (\n                            <img\n                                src={IMAGE_URL + movie.poster_path}\n                                alt={movie.title}\n                                className={styles.itemPoster}\n                            />\n                        )}\n                        <p className={styles.posterVote}>{movie.vote_average.toFixed(1)}</p>\n                    </div>\n                    <div className={styles.containerDetails}>\n                        <h2>{movie.title} |{movie.release_date.slice(0,4)}</h2>\n                        <p className={styles.description}><span className={styles.overview}>Overview: </span>{movie.overview}</p>\n                        <p className={styles.description}><span className={styles.genres}>Genres: </span>{movie.genres.map(genre => genre.name).join(' ')}</p>\n                    </div>\n                </div>\n                <div className={styles.boxInfo}>\n                    <h3 className={styles.info}>Additional information</h3>\n                    <div className={styles.linksComponents}>\n                        <NavLink to='cast' className={styles.link}>Casts</NavLink>\n                        <NavLink to='reviews' className={styles.link}>Reviews</NavLink>\n                    </div>\n                    <Outlet/>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MoviesDetails;"],"names":["_jsx","_Fragment","children","className","styles","Circles","height","width","color","ariaLabel","visible","KEY","axios","IMAGE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","status","Error","abrupt","data","t0","console","error","stop","apply","arguments","getMoviesDetails","_ref2","_callee2","movieId","_context2","_x","getMoviesCredits","_ref3","_callee3","_context3","_x2","getMoviesReviews","_ref4","_callee4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_context5","log","_x4","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","useParams","useEffect","then","finally","Spinner","_jsxs","Link","to","MdArrowBackIos","poster_path","src","alt","title","vote_average","toFixed","release_date","slice","overview","genres","map","genre","name","join","NavLink","Outlet"],"sourceRoot":""}