{"version":3,"file":"static/js/76.ee653e3f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","helpers/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerActors\":\"Cast_containerActors__prTA+\",\"posterActor\":\"Cast_posterActor__h5sTv\",\"nameActor\":\"Cast_nameActor__6kuz0\"};","import React, { useEffect, useState } from \"react\";\nimport styles from './Cast.module.css'\nimport { IMAGE_URL, getMoviesCredits } from \"helpers/api\";\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"components/Spinner/Spinner\";\n\nconst Cast = () => {\n    const [movieCredits, setMovieCredits] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getMoviesCredits(movieId)\n            .then(response => {\n                console.log('Response movie credits:', response)\n                setMovieCredits(response.cast);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching movie credits:', error);\n                setIsLoading(false)\n            });\n    }, [movieId]);\n    \n    return (\n        <>\n        {\n            isLoading ?\n            <Spinner/>\n            :\n             (<ul className={styles.containerActors}>\n            {\n                movieCredits.length > 0 ? (\n                    movieCredits.map(actor => (\n                        <li key={actor.id} className={styles.itemsActors}>\n                            {\n                                actor.profile_path ?\n                                <img \n                                src = {IMAGE_URL + actor.profile_path} \n                                alt={actor.name}\n                                className={styles.posterActor}/>\n                                \n                                :\n                                <div>No Poster Available</div>\n\n                            }\n                           <h3 className={styles.nameActor}>{actor.name}</h3>\n                        </li>\n                    ))\n                ) : (\n                    <li>No cast available</li>\n                )\n            }\n           </ul>)\n        }\n          \n        </>\n    )\n};\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"spinnerContainer\":\"Spinner_spinnerContainer__vzmN8\"};","import React from \"react\";\nimport styles from \"./Spinner.module.css\";\nimport { Circles } from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <>\n      <div className={styles.spinnerContainer}>\n        <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#ffa505\"\n        ariaLabel=\"circles-loading\"\n        visible={true}\n        />\n      </div>\n    </>\n  )\n}\nexport default Spinner;","import axios from 'axios';\n\nconst KEY = \"357832701cf86b43284c723babec1587\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${KEY}&language=en-US`);\n        if (response.status !== 200) {\n            throw new Error(\"Error fetching trending movies!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200) {\n            throw new Error(\"Error fetching details movies!\");\n        }\n        return response.data;\n    } catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesCredits = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n    }catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesReviews = async(movieId)=>{\n    try{\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error);\n    }\n}\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n        if (response.status !== 200){ \n            throw new Error(\"Error fetching movies search!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.log(error);\n        throw error; \n    }\n}\n\nexport const getTrailerMovie = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/videos?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200){\n            throw new Error (\"Error fetching movies video!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error)\n    }\n}"],"names":["_useState","useState","_useState2","_slicedToArray","movieCredits","setMovieCredits","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","getMoviesCredits","then","response","console","log","cast","catch","error","_jsx","_Fragment","children","Spinner","className","styles","length","map","actor","_jsxs","profile_path","src","IMAGE_URL","alt","name","id","Circles","height","width","color","ariaLabel","visible","KEY","axios","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","concat","sent","status","Error","abrupt","data","t0","stop","apply","arguments","getMoviesDetails","_ref2","_callee2","_context2","_x","_ref3","_callee3","_context3","_x2","getMoviesReviews","_ref4","_callee4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_context5","_x4"],"sourceRoot":""}